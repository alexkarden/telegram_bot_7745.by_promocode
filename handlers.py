from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from keyboards import create_main_keyboard, create_dynamic_keyboard
import time
from scripts import convert_date_to_str
from scripts_db import add_user_db, subscribed_user_db, unsubscribed_user_db, get_promokod_db, set_old_promokod_db, get_time_of_add_user_db, get_old_promokod_db





router = Router()
@router.message(CommandStart())
async def cmd_start(message: Message):
    curent_time = int(time.time())
    await message.answer('üëã <b> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! </b> \n  –ë–æ—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É –∏—â–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥—ã 7745:', reply_markup = create_main_keyboard(), parse_mode=ParseMode.HTML)
    await add_user_db(message.from_user.id, message.from_user.first_name, message.from_user.last_name, message.from_user.username)
    for kod in await get_promokod_db(curent_time):
        await message.answer(f'–ü—Ä–æ–º–æ–∫–æ–¥: <b>{kod[1]}</b> –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ {convert_date_to_str(kod[2])} –Ω–∞ <a href="{kod[3]}">{kod[4]}</a> - {kod[5]}',reply_markup= create_main_keyboard(),  parse_mode='html')


@router.message(Command('help'))
async def cmd_help(message: Message):
    await message.answer('–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ /help')

@router.message(Command('about'))
async def cmd_about(message: Message):
    await message.answer('<b>Alex Karden</b>\nhttps://github.com/alexkarden', reply_markup= create_main_keyboard(), parse_mode=ParseMode.HTML)

@router.message(Command('alexkarden'))
async def cmd_alexkarden(message: Message):
    await message.answer('<b>–ê–ª–µ–∫—Å–µ–π\n<a href="tel:+375297047262">+375-29-704-72-62</a></b>', parse_mode=ParseMode.HTML)


@router.message()
async def all_message(message: Message):
    text = message.text
    curent_time = int(time.time())
    if text == 'üõí –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã 7745':
        for kod in  await get_promokod_db(curent_time):
            await message.answer(f'–ü—Ä–æ–º–æ–∫–æ–¥: <b>{kod[1]}</b> –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ {convert_date_to_str(kod[2])} –Ω–∞ <a href="{kod[3]}">{kod[4]}</a> - {kod[5]}',reply_markup= create_main_keyboard(),  parse_mode='html')
    elif text == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        await message.answer('–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',reply_markup=await create_dynamic_keyboard(message.from_user.id),  parse_mode='html')
    elif text == 'üîô –í—ã–π—Ç–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫':
        await message.reply(f'<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!</b>',reply_markup= create_main_keyboard(), parse_mode='html')
    elif text == 'üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è':
        await subscribed_user_db(message.from_user.id)
        await message.reply(f'<b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã!</b>', reply_markup=await create_dynamic_keyboard(message.from_user.id), parse_mode='html')
    elif text == 'üîï –û—Ç–ø–∏—Å–∞—Ç—å—Å—è':
        await unsubscribed_user_db(message.from_user.id)
        await message.reply(f'<b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã!</b>', reply_markup=await create_dynamic_keyboard(message.from_user.id), parse_mode='html')
    elif text == 'alexkarden':
        await message.answer('<b>–ê–ª–µ–∫—Å–µ–π\n<a href="tel:+375297047262">+375-29-704-72-62</a></b>', parse_mode='html')
    elif text == '–ò—Å—Ç–æ—Ä–∏—è –í–∞—à–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤':
        x = '–ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:\n'
        for kod in await get_old_promokod_db(await get_time_of_add_user_db(message.from_user.id)):

            if kod == 0:
                x = '–ü–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤'


            else:

                x += f'–ü—Ä–æ–º–æ–∫–æ–¥: <b>{kod[1]}</b> –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ {convert_date_to_str(kod[2])} –Ω–∞ <a href="{kod[3]}">{kod[4]}</a> - {kod[5]}\n'


        await message.answer( f'{x}', reply_markup=create_main_keyboard(), parse_mode='html')


    else:
        await message.answer('–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –Ω–∏–∂–µ:', parse_mode='html')
